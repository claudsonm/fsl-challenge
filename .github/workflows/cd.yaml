name: CD Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - devel
      - stage
      - prod

jobs:
  terraform:
    name: Terraform Apply
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      - name: Initialize Terraform
        run: terraform init

      - name: Select or create workspace
        run: terraform workspace select ${{ github.ref_name }} || terraform workspace new ${{ github.ref_name }}

      - name: Terraform Apply
        run: terraform apply -auto-approve -var-file=environments/${{ github.ref_name }}.tfvars

  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    needs: terraform
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '15.5.1'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.REGION }}

      - name: Deploy to AWS
        uses: reggionick/s3-deploy@v4
        with:
          folder: build
          bucket: ${{ vars.S3_BUCKET }}
          bucket-region: ${{ vars.REGION }}
          delete-removed: true
          dist-id: ${{ vars.CF_DISTRIBUTION_ID }}
          private: true
          invalidation: /
          files-to-include: '{.*/**,**}'

      - name: Upload RD.svg to bucket root
        run: aws s3 cp src/RD.svg s3://${{ vars.S3_BUCKET }}/RD.svg --region ${{ vars.REGION }}
